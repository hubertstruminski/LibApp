<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">LibApp</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Rentals" asp-action="New">New Rental</a>
                        </li>
                        <li id="customers" class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Customers" asp-action="Index">Customers</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Books" asp-action="Index">Books</a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>

<script>
    function fetchUserRole() {
        const splitCookie = document.cookie.split(";");
        console.log(splitCookie);
        const index = splitCookie.findIndex(x => x.startsWith("Authorization"));
        const authorizationCookie = splitCookie[index].split("=");
        const jwtToken = authorizationCookie[1];
        const decodedToken = JSON.parse(atob(jwtToken.split(".")[1]));
        console.log(decodedToken);

        for (var key in decodedToken) {
            console.log(key);
            if (key.includes("role")) {
                const userRole = decodedToken[key];
                return userRole;
            }
        }

        return null;
    }

    if ("@LibApp.Startup.IsLoggedIn.ToString().ToLower()" === "true") {
        const userRole = fetchUserRole();

        if (userRole === 'User') {
            document.getElementById("customers").style.display = "none";
        }
    }
</script>